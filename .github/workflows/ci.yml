# This workflow will do a clean install of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: CI

on:
  push:
    branches: [master]
  pull_request:
    branches: [master]

jobs:
  lint:
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12]

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
        env:
          CACHE_KEY: npm-cache-key-node-v${{ matrix.node-version }}
      - run: npm i
      - name: Lint
        run: npm run lint
  test:
    needs: lint

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [12, 14, 16]
        # https://github.com/actions/setup-node#supported-version-syntax

    steps:
      - uses: actions/checkout@v2
      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v2
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'
        env:
          CACHE_KEY: npm-cache-key-node-v${{ matrix.node-version }}
      - run: npm i
      - name: Test
        run: npm test -- --ci --runInBand --reporters=default --reporters=jest-junit
        env:
          JEST_JUNIT_OUTPUT_NAME: results.xml
          JEST_JUNIT_OUTPUT_DIR: reports/jest-node${{ matrix.node-version }}
      - name: Publish Test Report
        uses: mikepenz/action-junit-report@v2
        if: always() # always run even if the previous step fails
        with:
          report_paths: reports/jest-node*/*.xml
